{"$message_type":"diagnostic","message":"environment variable `OUT_DIR` not defined at compile time","code":null,"level":"error","spans":[{"file_name":"C:\\Users\\charl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\lrlex-0.13.8\\src/lib/mod.rs","byte_start":5762,"byte_end":5777,"line_start":183,"line_end":183,"column_start":26,"column_end":41,"is_primary":true,"text":[{"text":"        include!(concat!(env!(\"OUT_DIR\"), \"/\", $path, \".rs\"));","highlight_start":26,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\charl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\lrlex-0.13.8\\src/lib/mod.rs","byte_start":5762,"byte_end":5777,"line_start":183,"line_end":183,"column_start":26,"column_end":41,"is_primary":false,"text":[{"text":"        include!(concat!(env!(\"OUT_DIR\"), \"/\", $path, \".rs\"));","highlight_start":26,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":261,"byte_end":285,"line_start":8,"line_end":8,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"lrlex_mod!(\"compiler.l\");","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"lrlex_mod!","def_site_span":{"file_name":"C:\\Users\\charl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\lrlex-0.13.8\\src/lib/mod.rs","byte_start":5690,"byte_end":5712,"line_start":181,"line_end":181,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! lrlex_mod {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"env!","def_site_span":{"file_name":"C:\\Users\\charl\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":38805,"byte_end":38821,"line_start":1101,"line_end":1101,"column_start":5,"column_end":21,"is_primary":false,"text":[{"text":"    macro_rules! env {","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"Cargo sets build script variables at run time. Use `std::env::var(\"OUT_DIR\")` instead","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: environment variable `OUT_DIR` not defined at compile time\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:8:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlrlex_mod!(\"compiler.l\");\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: Cargo sets build script variables at run time. Use `std::env::var(\"OUT_DIR\")` instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `env` which comes from the expansion of the macro `lrlex_mod` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"environment variable `OUT_DIR` not defined at compile time","code":null,"level":"error","spans":[{"file_name":"C:\\Users\\charl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\lrpar-0.13.8\\src/lib/mod.rs","byte_start":7402,"byte_end":7417,"line_start":222,"line_end":222,"column_start":26,"column_end":41,"is_primary":true,"text":[{"text":"        include!(concat!(env!(\"OUT_DIR\"), \"/\", $path, \".rs\"));","highlight_start":26,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\charl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\lrpar-0.13.8\\src/lib/mod.rs","byte_start":7402,"byte_end":7417,"line_start":222,"line_end":222,"column_start":26,"column_end":41,"is_primary":false,"text":[{"text":"        include!(concat!(env!(\"OUT_DIR\"), \"/\", $path, \".rs\"));","highlight_start":26,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":466,"byte_end":490,"line_start":11,"line_end":11,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"lrpar_mod!(\"compiler.y\");","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"lrpar_mod!","def_site_span":{"file_name":"C:\\Users\\charl\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\lrpar-0.13.8\\src/lib/mod.rs","byte_start":7330,"byte_end":7352,"line_start":220,"line_end":220,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! lrpar_mod {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"env!","def_site_span":{"file_name":"C:\\Users\\charl\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":38805,"byte_end":38821,"line_start":1101,"line_end":1101,"column_start":5,"column_end":21,"is_primary":false,"text":[{"text":"    macro_rules! env {","highlight_start":5,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"Cargo sets build script variables at run time. Use `std::env::var(\"OUT_DIR\")` instead","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: environment variable `OUT_DIR` not defined at compile time\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:11:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mlrpar_mod!(\"compiler.y\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: Cargo sets build script variables at run time. Use `std::env::var(\"OUT_DIR\")` instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `env` which comes from the expansion of the macro `lrpar_mod` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `compiler_l`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":575,"byte_end":585,"line_start":15,"line_end":15,"column_start":20,"column_end":30,"is_primary":true,"text":[{"text":"    let lexerdef = compiler_l::lexerdef();","highlight_start":20,"highlight_end":30}],"label":"use of undeclared crate or module `compiler_l`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared crate or module `compiler_l`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:15:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let lexerdef = compiler_l::lexerdef();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `compiler_l`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `compiler_y`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1119,"byte_end":1129,"line_start":28,"line_end":28,"column_start":35,"column_end":45,"is_primary":true,"text":[{"text":"                let (res, errs) = compiler_y::parse(&lexer);","highlight_start":35,"highlight_end":45}],"label":"use of undeclared crate or module `compiler_y`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared crate or module `compiler_y`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:28:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                let (res, errs) = compiler_y::parse(&lexer);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `compiler_y`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared crate or module `compiler_y`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared crate or module `ferris_wheel`\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":1227,"byte_end":1237,"line_start":30,"line_end":30,"column_start":50,"column_end":60,"is_primary":true,"text":[{"text":"                    println!(\"{}\", e.pp(&lexer, &compiler_y::token_epp));","highlight_start":50,"highlight_end":60}],"label":"use of undeclared crate or module `compiler_y`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared crate or module `compiler_y`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc/main.rs:30:50\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                    println!(\"{}\", e.pp(&lexer, &compiler_y::token_epp));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared crate or module `compiler_y`\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 5 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 5 previous errors\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0433`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0433`.\u001b[0m\n"}
